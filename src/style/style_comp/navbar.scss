:root {
    --dark-bg: #252627;
    --checked-clr: #7494ea;
  }

.navbar{
    padding: 1em 2em;
    display: flex;
    justify-content: space-between;
    align-items:center;
    background-color: #101010;
    border-bottom: .5px solid $color3;
    @include responsive(m){
        display: none;
    }

    &_toggle{
      display: flex;
      &_input {
        cursor: pointer;
        -webkit-appearance: none;
        position: relative;
        width: 57px;
        height: 27px;
        border: 2px solid #ccdbdc;
        outline: none;
        border-radius: 30px;
        transition: 300ms;
        &::before{
          content: "";
          position: absolute;
          top: 1.5px;
          left: 2px;
          width: 20px;
          height: 20px;
          background: #d1c9c9;
          border-radius: 50%;
          transition: background 300ms ease, transform 300ms ease;
        }
        &:checked{
          border-color: var(--checked-clr);
          &::before{
            transform: translateX(30px);
            background: var(--checked-clr);
          }
        }
      }
    }

    &_menu{
        color:$color3;
        display: flex;
        list-style: none;
        justify-content: space-around;
        width:400px;
        align-items:center;
        font-weight: 200;
        font-size: 18px;
        &_list{
          text-decoration: none;
          transition: opacity .3s ease .3s;
          color: $color3;
      }
    }
}

.container{
  display: none;
  
  @include responsive(m){
    display: flex;
    background-color: rgb(240, 240, 240);
  position: fixed;
  bottom: 0;
  z-index: 100;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 60px;
}
}

.tabbar{
  display: flex;
  align-items: center;
  justify-content: center;
}

ul{
  display: flex;
  justify-content: center;
  align-items: center;
}

// Mobile View

.mnavbar{
  display: none;
  @include responsive(m){
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 99;
}
  &_menu{
    border: 2px solid blue;
    display: flex;
    background: transparent;
    padding: 1.5em .5em;
    position: fixed;
    bottom: 10px;
    width: 90%;
    border-radius: 20px;
    justify-content: space-around;
    align-items: center;
    margin: 1em 0;
    z-index: 99;
    &_list{
      display: flex;
      align-items: center;
    }
  }
}

.active{
  background-color: red;
  color: #fff;
}

.icon path{
  fill: transparent;
  stroke-width: 10;
  stroke: rgb(255, 255, 255);
}

.icon.document path{
  stroke-dasharray: 1750;
  stroke-dashoffset: 0;
}

.icon.document:hover path{
  animation: animate-document 2s linear forwards;
}

@keyframes animate-document{
  0%{
    stroke-dashoffset: 0;
  }
  40%{
    stroke-dashoffset: 1750;
  }
  80%{
    stroke-dashoffset: 3500;
    fill: transparent;
  }
  100%{
    stroke-dashoffset: 3500;
    fill: yellowgreen;
  }
}

// .navbar_n{
//   display: flex;
//   align-items: center;
//   justify-content: center;
//   z-index: 99;
// }
// nav {
// display: flex;
// background: #fff;
// /* considerable whitespace surrounding the navigation's items */
// padding: 1em 1em;
// /* margin: auto 1em; */
// box-shadow: 0 1px 15px rgba(0, 0, 0, 0.1);
// position: fixed;
// bottom: 10px;
// width: 90%;
// border-radius: 30px;
// justify-content: space-around;
// align-items: center;
// margin: 1em 1em;
// z-index: 99;
// }

// /* remove default style and slightly separate the anchor links from one another */
// a {
// color: inherit;
// text-decoration: none;
// margin: 0 0.2rem;
// /* display the svg icon and span elements side by side, vertically aligned */
// display: flex;
// align-items: center;
// /* include padding for the background applied on the active item */
// padding: 0.75rem 1.25rem;
// border-radius: 30px;
// /* position relative for the pseudo element */
// position: relative;
// /* custom properties for the colors picked up by the elements when clicked (and updated for each link in the script) */
// --hover-bg: #5b37b720;
// --hover-c: #5b37b7;
// }

// /* include considerable negative margin to have the svg icon overlapping with the span element */
// a svg {
// margin-right: -2.5rem;
// width: 28px;
// height: 28px;
// pointer-events: none;
// /* transition for the change in margin */
// transition: margin 0.2s ease-out;
// }
// /* by default hide the span element */
// a span {
// opacity: 0;
// visibility: hidden;
// font-size: 0.9rem;
// margin-left: 0.9rem;
// }
// /* include with a pseudo element relative to the anchor link a circle, with a fixed with and height */
// a:before {
// position: absolute;
// content: "";
// top: 50%;
// left: 0;
// width: 70px;
// height: 70px;
// border-radius: 50%;
// /* positioned to the left of the anchor link and scaled to 0 */
// transform: translate(0%, -50%) scale(0);
// visibility: visible;
// opacity: 1;
// }
// /* when active */
// /* specify the colors dictated by the custom properties */
// // a.active {
// // background: var(--hover-bg);
// // color: var(--hover-c);
// // }
// /* using the color specified by the then updated custom property show the circle of the pseudo element increasing its size and highlighting it momentarily */
// a.active:before {
// background: var(--hover-c);
// opacity: 0;
// visibility: hidden;
// transform: translate(0%, -50%) scale(2);
// /* transition only when the class is applied */
// transition: all 0.4s ease-out;
// }
// /* remove the margin applied to the svg to make it overlay atop the anchor link */
// a.active svg {
// margin-right: 0;
// }
// /* show the span element */
// a.active span {
// visibility: visible;
// opacity: 1;
// transition: all 0.2s ease-out;
// }